<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".g.cs" #>
using CppSharp.Types;
using JetBrains.Annotations;

namespace ImGuiNET.Generator.TypeMaps;

<#
	var names = new[]
	{
		"ImDrawFlags",
		"ImGuiBackendFlags",
		"ImGuiButtonFlags",
		"ImGuiColorEditFlags",
		"ImGuiCol",
		"ImGuiComboFlags",
		"ImGuiCond",
		"ImGuiConfigFlags",
		"ImGuiDataType",
		"ImGuiDir",
		"ImGuiDragDropFlags",
		"ImGuiFocusedFlags",
		"ImGuiHoveredFlags",
		"ImGuiInputTextFlags",
		"ImGuiKey",
		"ImGuiMouseButton",
		"ImGuiMouseCursor",
		"ImGuiPopupFlags",
		"ImGuiSelectableFlags",
		"ImGuiSortDirection",
		"ImGuiSliderFlags",
		"ImGuiStyleVar",
		"ImGuiTabBarFlags",
		"ImGuiTabItemFlags",
		"ImGuiTableBgTarget",
		"ImGuiTableColumnFlags",
		"ImGuiTableFlags",
		"ImGuiTableRowFlags",
		"ImGuiTreeNodeFlags",
		"ImGuiWindowFlags"
// TODO "ImDrawListFlags",
// TODO "ImFontAtlasFlags",
// TODO "ImGuiViewportFlags",
	};


	foreach (var name in names)
	{
#>
[UsedImplicitly] [TypeMap("<#= name #>")]
internal sealed class TypeMap<#= name #> : TypeMapIm { }

<#
	}
#>